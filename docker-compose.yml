# staging (production)
version: '2'

volumes:
  dbdata:

# networks:
  # default:
  #   external:
  #     name: service-tier
  # app:

services:
  nginx:
    restart: always
    # image: nginx:stable
    container_name: "nginx"
    networks:
      - default
    #   - app
    build: ./nginx/
    # entrypoint: nginx
    # volumes:
    #   - "./nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
    #   - "./nginx.conf:/etc/nginx/nginx.conf:ro"
    # network_mode: "host"
    ports:
      - "80:80"
      # - 443
  admin:
    restart: always
    container_name: "admin"
    build: ./admin
    environment:
      GROUP: admin
    # networks:
    #   - app
    env_file:
      - .env.production
    depends_on:
      - db
      - nginx
  db:
    restart: always
    container_name: "db"
    # image: mdillon/postgis:9.6
    build: ./admin/postgis/9.6-2.4
    env_file:
      - .env.production
    volumes:
      - dbdata:/var/lib/postgresql/data
    # networks:
    #   - app
  # telegram_bot:
  #   container_name: "telegram_bot"
  #   build: .
  #   # networks:
  #   #   - app
  #   env_file:
  #     - .env.production
  #   depends_on:
  #     - db
      # - admin
  quest_bot:
    container_name: "quest_bot"
    build:
      context: ./admin
      dockerfile: Dockerfile-quest-bot
    environment:
      GROUP: bot
    # networks:
    #   - app
    env_file:
      - .env.production
    depends_on:
      - db
      # - admin
